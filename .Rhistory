library(tidyverse)
library(googlesheets)
## ggplot theme
windowsFonts(Arial=windowsFont("TT Arial"))
theme_scz <- function(...){
theme_bw(base_size=10, base_family="Arial") +
theme(
text=element_text(color="black"),
plot.title=element_text(face="bold", size=rel(1)),
axis.title=element_text(face="bold", size=rel(1)),
axis.text=element_text(size=rel(1)),
strip.text=element_text(size=rel(1)),
legend.title=element_text(face="bold", size=rel(1)),
legend.text=element_text(size=rel(1)),
panel.grid=element_blank(),
plot.margin=unit(c(1,1,1,1), "mm"),
strip.background=element_blank())
}
theme_set(theme_scz())
# authorize account - this takes place in browser window
gs_auth(new_user = T)
install.packages("googlesheets4")
library(tidyverse)
library(googlesheets4)
## ggplot theme
windowsFonts(Arial=windowsFont("TT Arial"))
theme_scz <- function(...){
theme_bw(base_size=10, base_family="Arial") +
theme(
text=element_text(color="black"),
plot.title=element_text(face="bold", size=rel(1)),
axis.title=element_text(face="bold", size=rel(1)),
axis.text=element_text(size=rel(1)),
strip.text=element_text(size=rel(1)),
legend.title=element_text(face="bold", size=rel(1)),
legend.text=element_text(size=rel(1)),
panel.grid=element_blank(),
plot.margin=unit(c(1,1,1,1), "mm"),
strip.background=element_blank())
}
# authorize account
gs4_deauth()
# register google sheet
sheet <- read_sheet("https://docs.google.com/spreadsheets/d/1I4kUeZEEtup1e7Wd3PSqfBpaHyK6ntcL18Dz2zYSCfs/edit#gid=1890047702")
?read_sheet
install.packages("googledrive")
install.packages("googledrive")
# register google sheet
sheet <- read_sheet("https://docs.google.com/spreadsheets/d/1I4kUeZEEtup1e7Wd3PSqfBpaHyK6ntcL18Dz2zYSCfs/edit#gid=1890047702",
sheet = 1)
library(tidyverse)
library(googlesheets4)
## ggplot theme
windowsFonts(Arial=windowsFont("TT Arial"))
theme_scz <- function(...){
theme_bw(base_size=10, base_family="Arial") +
theme(
text=element_text(color="black"),
plot.title=element_text(face="bold", size=rel(1)),
axis.title=element_text(face="bold", size=rel(1)),
axis.text=element_text(size=rel(1)),
strip.text=element_text(size=rel(1)),
legend.title=element_text(face="bold", size=rel(1)),
legend.text=element_text(size=rel(1)),
panel.grid=element_blank(),
plot.margin=unit(c(1,1,1,1), "mm"),
strip.background=element_blank())
}
theme_set(theme_scz())
# deauthorize - no need to write or read private sheets
gs4_deauth()
# register google sheet
sheet <- read_sheet("https://docs.google.com/spreadsheets/d/1I4kUeZEEtup1e7Wd3PSqfBpaHyK6ntcL18Dz2zYSCfs/edit#gid=1890047702",
sheet = 1)
# register google sheet
sheet <- read_sheet("https://docs.google.com/spreadsheets/d/1I4kUeZEEtup1e7Wd3PSqfBpaHyK6ntcL18Dz2zYSCfs/edit#gid=1890047702",
sheet = 2)
sheet
# register google sheet
sheet <- read_sheet("https://docs.google.com/spreadsheets/d/1I4kUeZEEtup1e7Wd3PSqfBpaHyK6ntcL18Dz2zYSCfs/edit#gid=1890047702",
sheet = 1, range = "A3:H38")
View(sheet)
# register google sheet
sheet <- read_sheet("https://docs.google.com/spreadsheets/d/1I4kUeZEEtup1e7Wd3PSqfBpaHyK6ntcL18Dz2zYSCfs/edit#gid=1890047702",
sheet = 1, range = "A3:H38", col_types = "tccccccc")
View(sheet)
# register google sheet
sheet <- read_sheet("https://docs.google.com/spreadsheets/d/1I4kUeZEEtup1e7Wd3PSqfBpaHyK6ntcL18Dz2zYSCfs/edit#gid=1890047702",
sheet = 1, range = "A3:H38", col_types = "cccccccc")
View(sheet)
sheet$Time_Parse <- lubridate::hm(sheet$Time)
View(sheet)
# register google sheet
data <- read_sheet("https://docs.google.com/spreadsheets/d/1I4kUeZEEtup1e7Wd3PSqfBpaHyK6ntcL18Dz2zYSCfs/edit#gid=1890047702",
sheet = 1, range = "A3:H38", col_types = "cccccccc")
# register google sheet
sheet_url <- "https://docs.google.com/spreadsheets/d/1I4kUeZEEtup1e7Wd3PSqfBpaHyK6ntcL18Dz2zYSCfs/edit#gid=1890047702"
# register google sheet
sheet_url <- "https://docs.google.com/spreadsheets/d/1I4kUeZEEtup1e7Wd3PSqfBpaHyK6ntcL18Dz2zYSCfs/edit#gid=1890047702"
data <- read_sheet(sheet_url, sheet = 1, range = "A3:H38", col_types = "cccccccc")
daytype <- gs_read(sheet, ws = w, range = "B2:H2",
col_names = c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"))
tab <- 1
daytype <- read_sheet(sheet_url, sheet = tab, range = "B2:H2",
col_names = c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"))
View(daytype)
sheet_info <- gs4_get(sheet_url)
View(sheet_info)
tabs_all <- sheet_info$sheets
View(tabs_all)
tabs_all <- sheet_info$sheets %>%
subset(names != "template")
tabs_all <- sheet_info$sheets %>%
subset(name != "template")
View(tabs_all)
w <- 1
# figure out when this week starts
week_start_date <- lubridate::mdy(tabs_all$name[w])
# read google sheet
data <- read_sheet(sheet_url, sheet = tabs_all$name[w], range = "A3:H38", col_types = "cccccccc")
View(data)
daytype <- read_sheet(sheet_url, sheet = tabs_all$name[w], range = "B2:H2",
col_names = c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"))
# transform to long-form and combine
daytype_long <-
tibble::tibble(Day = colnames(daytype),
Daytype = c(as.character(daytype[1,])))
data_long <-
reshape2::melt(data, id = "Time", value.name = "Activity", variable.name = "Day")
week_summary <-
dplyr::left_join(data_long, daytype_long, by = "Day") %>%
replace_na(list("Activity" = "Not Work")) %>%
dplyr::mutate(week_start_date = week_start_date)
View(week_summary)
## next: 2019
sheet_url_2019 <- "https://docs.google.com/spreadsheets/d/1O4tB-IDLZUqP1I2ECJ9JnBOEDbQEoOwNLbbcBjrV4Tk/edit?usp=sharing"
sheet_info_19 <- gs4_get(sheet_url_19)
## next: 2019
sheet_url_19 <- "https://docs.google.com/spreadsheets/d/1O4tB-IDLZUqP1I2ECJ9JnBOEDbQEoOwNLbbcBjrV4Tk/edit?usp=sharing"
sheet_info_19 <- gs4_get(sheet_url_19)
tabs_all_19 <-
sheet_info_19$sheets %>%
subset(name != "template")
rm(list=ls())
library(tidyverse)
library(googlesheets4)
## ggplot theme
windowsFonts(Arial=windowsFont("TT Arial"))
theme_scz <- function(...){
theme_bw(base_size=10, base_family="Arial") +
theme(
text=element_text(color="black"),
plot.title=element_text(face="bold", size=rel(1)),
axis.title=element_text(face="bold", size=rel(1)),
axis.text=element_text(size=rel(1)),
strip.text=element_text(size=rel(1)),
legend.title=element_text(face="bold", size=rel(1)),
legend.text=element_text(size=rel(1)),
panel.grid=element_blank(),
plot.margin=unit(c(1,1,1,1), "mm"),
strip.background=element_blank())
}
theme_set(theme_scz())
# deauthorize - no need to write or read private sheets
gs4_deauth()
## first: do 2020
sheet_url <- "https://docs.google.com/spreadsheets/d/1I4kUeZEEtup1e7Wd3PSqfBpaHyK6ntcL18Dz2zYSCfs/edit#gid=1890047702"
sheet_info <- gs4_get(sheet_url)
tabs_all <-
sheet_info$sheets %>%
subset(name != "template")
for (w in 1:length(tabs_all$name)){
# figure out when this week starts
week_start_date <- lubridate::mdy(tabs_all$name[w])
# read google sheet
data <- read_sheet(sheet_url, sheet = tabs_all$name[w], range = "A3:H38", col_types = "cccccccc")
daytype <- read_sheet(sheet_url, sheet = tabs_all$name[w], range = "B2:H2",
col_names = c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"))
# transform to long-form and combine
daytype_long <-
tibble::tibble(Day = colnames(daytype),
Daytype = c(as.character(daytype[1,])))
data_long <-
reshape2::melt(data, id = "Time", value.name = "Activity", variable.name = "Day")
week_summary <-
dplyr::left_join(data_long, daytype_long, by = "Day") %>%
replace_na(list("Activity" = "Not Work")) %>%
dplyr::mutate(week_start_date = week_start_date)
if (w == 1){
all_weeks <- week_summary
} else {
all_weeks <-
dplyr::bind_rows(week_summary, all_weeks)
}
}
Sys.sleep(5)
rm(list=ls())
library(tidyverse)
library(googlesheets4)
## ggplot theme
windowsFonts(Arial=windowsFont("TT Arial"))
theme_scz <- function(...){
theme_bw(base_size=10, base_family="Arial") +
theme(
text=element_text(color="black"),
plot.title=element_text(face="bold", size=rel(1)),
axis.title=element_text(face="bold", size=rel(1)),
axis.text=element_text(size=rel(1)),
strip.text=element_text(size=rel(1)),
legend.title=element_text(face="bold", size=rel(1)),
legend.text=element_text(size=rel(1)),
panel.grid=element_blank(),
plot.margin=unit(c(1,1,1,1), "mm"),
strip.background=element_blank())
}
theme_set(theme_scz())
# deauthorize - no need to write or read private sheets
gs4_deauth()
## first: do 2020
sheet_url <- "https://docs.google.com/spreadsheets/d/1I4kUeZEEtup1e7Wd3PSqfBpaHyK6ntcL18Dz2zYSCfs/edit#gid=1890047702"
sheet_info <- gs4_get(sheet_url)
tabs_all <-
sheet_info$sheets %>%
subset(name != "template")
for (w in 1:length(tabs_all$name)){
# figure out when this week starts
week_start_date <- lubridate::mdy(tabs_all$name[w])
# read google sheet
data <- read_sheet(sheet_url, sheet = tabs_all$name[w], range = "A3:H38", col_types = "cccccccc")
daytype <- read_sheet(sheet_url, sheet = tabs_all$name[w], range = "B2:H2",
col_names = c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"))
# transform to long-form and combine
daytype_long <-
tibble::tibble(Day = colnames(daytype),
Daytype = c(as.character(daytype[1,])))
data_long <-
reshape2::melt(data, id = "Time", value.name = "Activity", variable.name = "Day")
week_summary <-
dplyr::left_join(data_long, daytype_long, by = "Day") %>%
replace_na(list("Activity" = "Not Work")) %>%
dplyr::mutate(week_start_date = week_start_date)
if (w == 1){
all_weeks <- week_summary
} else {
all_weeks <-
dplyr::bind_rows(week_summary, all_weeks)
}
# pause to avoid rate limit
Sys.sleep(5)
}
## next: 2019
sheet_url_19 <- "https://docs.google.com/spreadsheets/d/1O4tB-IDLZUqP1I2ECJ9JnBOEDbQEoOwNLbbcBjrV4Tk/edit?usp=sharing"
sheet_info_19 <- gs4_get(sheet_url_19)
tabs_all_19 <-
sheet_info_19$sheets %>%
subset(name != "template")
for (w in 1:length(tabs_all_19$name)){
# figure out when this week starts
week_start_date <- lubridate::mdy(tabs_all_19$name[w])
# read google sheet
data <- read_sheet(sheet_url_19, sheet = tabs_all_19$name[w], range = "A3:H38", col_types = "cccccccc")
daytype <- read_sheet(sheet_url_19, sheet = tabs_all_19$name[w], range = "B2:H2",
col_names = c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"))
# transform to long-form and combine
daytype_long <-
tibble::tibble(Day = colnames(daytype),
Daytype = c(as.character(daytype[1,])))
data_long <-
reshape2::melt(data, id = "Time", value.name = "Activity", variable.name = "Day")
week_summary <-
dplyr::left_join(data_long, daytype_long, by = "Day") %>%
replace_na(list("Activity" = "Not Work")) %>%
dplyr::mutate(week_start_date = week_start_date)
all_weeks <-
dplyr::bind_rows(week_summary, all_weeks)
Sys.sleep(5)
}
?write_csv
write_csv(all_weeks, "WorkTimeAnalysis_Hours_2020.csv")
head(all_weeks)
min(all_weeks$week_start_date)
all_weeks <- subset(all_weeks, lubridate::year(week_start_date) >= 2020)
min(all_weeks$week_start_date)
write_csv(all_weeks, "WorkTimeAnalysis_Hours_2020.csv")
## next: 2019
sheet_url_19 <- "https://docs.google.com/spreadsheets/d/1O4tB-IDLZUqP1I2ECJ9JnBOEDbQEoOwNLbbcBjrV4Tk/edit?usp=sharing"
sheet_info_19 <- gs4_get(sheet_url_19)
tabs_all_19 <-
sheet_info_19$sheets %>%
subset(name != "template")
for (w in 1:length(tabs_all_19$name)){
# figure out when this week starts
week_start_date <- lubridate::mdy(tabs_all_19$name[w])
# read google sheet
data <- read_sheet(sheet_url_19, sheet = tabs_all_19$name[w], range = "A3:H38", col_types = "cccccccc")
daytype <- read_sheet(sheet_url_19, sheet = tabs_all_19$name[w], range = "B2:H2",
col_names = c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"))
# transform to long-form and combine
daytype_long <-
tibble::tibble(Day = colnames(daytype),
Daytype = c(as.character(daytype[1,])))
data_long <-
reshape2::melt(data, id = "Time", value.name = "Activity", variable.name = "Day")
week_summary <-
dplyr::left_join(data_long, daytype_long, by = "Day") %>%
replace_na(list("Activity" = "Not Work")) %>%
dplyr::mutate(week_start_date = week_start_date)
if (w == 1){
all_weeks_19 <- week_summary
} else {
all_weeks_19 <-
dplyr::bind_rows(week_summary, all_weeks_19)
}
Sys.sleep(5)
}
all_weeks_19 <- read_csv("WorkTimeAnalysis_Hours_2019-temp.csv")
library(tidyverse)
library(googlesheets4)
all_weeks_19 <- read_csv("WorkTimeAnalysis_Hours_2019-temp.csv")
## ggplot theme
windowsFonts(Arial=windowsFont("TT Arial"))
theme_scz <- function(...){
theme_bw(base_size=10, base_family="Arial") +
theme(
text=element_text(color="black"),
plot.title=element_text(face="bold", size=rel(1)),
axis.title=element_text(face="bold", size=rel(1)),
axis.text=element_text(size=rel(1)),
strip.text=element_text(size=rel(1)),
legend.title=element_text(face="bold", size=rel(1)),
legend.text=element_text(size=rel(1)),
panel.grid=element_blank(),
plot.margin=unit(c(1,1,1,1), "mm"),
strip.background=element_blank())
}
theme_set(theme_scz())
# deauthorize - no need to write or read private sheets
gs4_deauth()
## next: 2019
sheet_url_19 <- "https://docs.google.com/spreadsheets/d/1O4tB-IDLZUqP1I2ECJ9JnBOEDbQEoOwNLbbcBjrV4Tk/edit?usp=sharing"
sheet_info_19 <- gs4_get(sheet_url_19)
tabs_all_19 <-
sheet_info_19$sheets %>%
subset(name != "template")
for (w in 45:length(tabs_all_19$name)){
# figure out when this week starts
week_start_date <- lubridate::mdy(tabs_all_19$name[w])
# read google sheet
data <- read_sheet(sheet_url_19, sheet = tabs_all_19$name[w], range = "A3:H38", col_types = "cccccccc")
daytype <- read_sheet(sheet_url_19, sheet = tabs_all_19$name[w], range = "B2:H2",
col_names = c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"))
# transform to long-form and combine
daytype_long <-
tibble::tibble(Day = colnames(daytype),
Daytype = c(as.character(daytype[1,])))
data_long <-
reshape2::melt(data, id = "Time", value.name = "Activity", variable.name = "Day")
week_summary <-
dplyr::left_join(data_long, daytype_long, by = "Day") %>%
replace_na(list("Activity" = "Not Work")) %>%
dplyr::mutate(week_start_date = week_start_date)
if (w == 1){
all_weeks_19 <- week_summary
} else {
all_weeks_19 <-
dplyr::bind_rows(week_summary, all_weeks_19)
}
Sys.sleep(8)
}
View(all_weeks_19)
all_weeks_19 <- read_csv("WorkTimeAnalysis_Hours_2019-temp.csv")
w <- 45
# figure out when this week starts
week_start_date <- lubridate::mdy(tabs_all_19$name[w])
# read google sheet
data <- read_sheet(sheet_url_19, sheet = tabs_all_19$name[w], range = "A3:H38", col_types = "cccccccc")
View(data)
daytype <- read_sheet(sheet_url_19, sheet = tabs_all_19$name[w], range = "B2:H2",
col_names = c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"))
# transform to long-form and combine
daytype_long <-
tibble::tibble(Day = colnames(daytype),
Daytype = c(as.character(daytype[1,])))
data_long <-
reshape2::melt(data, id = "Time", value.name = "Activity", variable.name = "Day")
View(data_long)
week_summary <-
dplyr::left_join(data_long, daytype_long, by = "Day") %>%
replace_na(list("Activity" = "Not Work")) %>%
dplyr::mutate(week_start_date = week_start_date)
View(week_summary)
class(all_weeks$Time)
class(all_weeks_19$Time)
View(all_weeks_19)
?read_csv
all_weeks_19 <- read_csv("WorkTimeAnalysis_Hours_2019-temp.csv", col_types = "ccccT")
View(all_weeks_19)
if (w == 1){
all_weeks_19 <- week_summary
} else {
all_weeks_19 <-
dplyr::bind_rows(week_summary, all_weeks_19)
}
View(all_weeks_19)
for (w in 46:length(tabs_all_19$name)){
# figure out when this week starts
week_start_date <- lubridate::mdy(tabs_all_19$name[w])
# read google sheet
data <- read_sheet(sheet_url_19, sheet = tabs_all_19$name[w], range = "A3:H38", col_types = "cccccccc")
daytype <- read_sheet(sheet_url_19, sheet = tabs_all_19$name[w], range = "B2:H2",
col_names = c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"))
# transform to long-form and combine
daytype_long <-
tibble::tibble(Day = colnames(daytype),
Daytype = c(as.character(daytype[1,])))
data_long <-
reshape2::melt(data, id = "Time", value.name = "Activity", variable.name = "Day")
week_summary <-
dplyr::left_join(data_long, daytype_long, by = "Day") %>%
replace_na(list("Activity" = "Not Work")) %>%
dplyr::mutate(week_start_date = week_start_date)
if (w == 1){
all_weeks_19 <- week_summary
} else {
all_weeks_19 <-
dplyr::bind_rows(week_summary, all_weeks_19)
}
Sys.sleep(8)
}
View(all_weeks_19)
write_csv(all_weeks_19, "WorkTimeAnalysis_Hours_2019.csv")
